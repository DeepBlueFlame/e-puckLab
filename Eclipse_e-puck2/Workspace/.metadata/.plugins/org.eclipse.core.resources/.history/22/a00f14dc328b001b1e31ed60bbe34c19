#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#include "ch.h"
#include "hal.h"
#include "memory_protection.h"
#include <main.h>
#include "leds.h"
#include "spi_comm.h"
#include "sensors/proximity.h"
#include "motors.h"
#include "chprintf.h"
#include "usbcfg.h"

messagebus_tbus;
MUTEX_DECL(bus_lock);
CONDVAR_DECL(bus_condvar);


int main(void)
{

    halInit();
    chSysInit();
    mpu_init();
    // Initiate the USB communication peripheral
    usb_start();
    // Initiate and turn off all eight ring LEDs
    clear_leds();
    spi_comm_start();
    // Initiate the internal process communication bus
    messagebus_init(&bus, &bus_lock, &bus_condvar);
    // Initiate the motors
    motors_init();

    //
    proximity_start();
    calibrate_ir();

    /* Infinite loop. */
    while (1) {
    	// LED setting
    	//set_led(LED1, 2);
    	//set_rgb_led(LED2, 5, 5, 5);
    	set_body_led(2);
    	//waits 1 second
    	chThdSleepMilliseconds(1000);

    	// Motor setting
    	left_motor_set_speed(-420);
    	right_motor_set_speed(420);
    	//waits 1 second
        chThdSleepMilliseconds(1000);

        // Proximity setting
        for (int i = 0; i <= 7; i++){
        	double prox_values = get_calibrated_prox(i);
        	if (SDU1.config->usbp->state==USB_ACTIVE) {
        		chprintf((BaseSequentialStream*)&SDU1, "%4d,", prox_values);
        	}
        }
        //waits 1 second
        chThdSleepMilliseconds(1000);
    }
}

#define STACK_CHK_GUARD 0xe2dee396
uintptr_t __stack_chk_guard = STACK_CHK_GUARD;

void __stack_chk_fail(void)
{
    chSysHalt("Stack smashing detected");
}
